/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *ToBST(ListNode* &head, int l, int r){
        if(l > r) return NULL;
        int m = l + (r - l)/2;
        TreeNode *left = ToBST(head, l ,m - 1);
        TreeNode *root = new TreeNode(head->val);
        head = head->next;
        root->left = left;
        root->right = ToBST(head, m + 1, r);
        return root;
        
    }
    TreeNode *sortedListToBST(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n = 0;
        if(head == NULL) return NULL;
        ListNode *p = head;
        while(p){
            p = p->next;
            n++;
        }
        
        return ToBST(head, 0, n - 1);
    }
};
